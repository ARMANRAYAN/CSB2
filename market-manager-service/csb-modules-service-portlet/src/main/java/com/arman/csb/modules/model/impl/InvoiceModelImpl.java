package com.arman.csb.modules.model.impl;

import com.arman.csb.modules.model.Invoice;
import com.arman.csb.modules.model.InvoiceModel;
import com.arman.csb.modules.model.InvoiceSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Invoice service. Represents a row in the &quot;CSBModules_Invoice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.arman.csb.modules.model.InvoiceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InvoiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see InvoiceImpl
 * @see com.arman.csb.modules.model.Invoice
 * @see com.arman.csb.modules.model.InvoiceModel
 * @generated
 */
@JSON(strict = true)
public class InvoiceModelImpl extends BaseModelImpl<Invoice>
    implements InvoiceModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a invoice model instance should use the {@link com.arman.csb.modules.model.Invoice} interface instead.
     */
    public static final String TABLE_NAME = "CSBModules_Invoice";
    public static final Object[][] TABLE_COLUMNS = {
            { "uuid_", Types.VARCHAR },
            { "id_", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "customerId", Types.BIGINT },
            { "address", Types.VARCHAR },
            { "telephone", Types.VARCHAR },
            { "mobile", Types.VARCHAR },
            { "typeOfDelivery", Types.INTEGER },
            { "status", Types.INTEGER },
            { "explain_", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table CSBModules_Invoice (uuid_ VARCHAR(75) null,id_ LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,customerId LONG,address VARCHAR(75) null,telephone VARCHAR(75) null,mobile VARCHAR(75) null,typeOfDelivery INTEGER,status INTEGER,explain_ VARCHAR(2000) null)";
    public static final String TABLE_SQL_DROP = "drop table CSBModules_Invoice";
    public static final String ORDER_BY_JPQL = " ORDER BY invoice.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CSBModules_Invoice.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.arman.csb.modules.model.Invoice"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.arman.csb.modules.model.Invoice"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.arman.csb.modules.model.Invoice"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long CUSTOMERID_COLUMN_BITMASK = 2L;
    public static long GROUPID_COLUMN_BITMASK = 4L;
    public static long USERID_COLUMN_BITMASK = 8L;
    public static long UUID_COLUMN_BITMASK = 16L;
    public static long ID_COLUMN_BITMASK = 32L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.arman.csb.modules.model.Invoice"));
    private static ClassLoader _classLoader = Invoice.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Invoice.class
        };
    private String _uuid;
    private String _originalUuid;
    private long _id;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private long _companyId;
    private long _originalCompanyId;
    private boolean _setOriginalCompanyId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _customerId;
    private long _originalCustomerId;
    private boolean _setOriginalCustomerId;
    private String _address;
    private String _telephone;
    private String _mobile;
    private Short _typeOfDelivery;
    private int _status;
    private String _explain;
    private long _columnBitmask;
    private Invoice _escapedModel;

    public InvoiceModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Invoice toModel(InvoiceSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Invoice model = new InvoiceImpl();

        model.setUuid(soapModel.getUuid());
        model.setId(soapModel.getId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setCustomerId(soapModel.getCustomerId());
        model.setAddress(soapModel.getAddress());
        model.setTelephone(soapModel.getTelephone());
        model.setMobile(soapModel.getMobile());
        model.setTypeOfDelivery(soapModel.getTypeOfDelivery());
        model.setStatus(soapModel.getStatus());
        model.setExplain(soapModel.getExplain());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Invoice> toModels(InvoiceSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Invoice> models = new ArrayList<Invoice>(soapModels.length);

        for (InvoiceSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Invoice.class;
    }

    @Override
    public String getModelClassName() {
        return Invoice.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uuid", getUuid());
        attributes.put("id", getId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("customerId", getCustomerId());
        attributes.put("address", getAddress());
        attributes.put("telephone", getTelephone());
        attributes.put("mobile", getMobile());
        attributes.put("typeOfDelivery", getTypeOfDelivery());
        attributes.put("status", getStatus());
        attributes.put("explain", getExplain());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String uuid = (String) attributes.get("uuid");

        if (uuid != null) {
            setUuid(uuid);
        }

        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long customerId = (Long) attributes.get("customerId");

        if (customerId != null) {
            setCustomerId(customerId);
        }

        String address = (String) attributes.get("address");

        if (address != null) {
            setAddress(address);
        }

        String telephone = (String) attributes.get("telephone");

        if (telephone != null) {
            setTelephone(telephone);
        }

        String mobile = (String) attributes.get("mobile");

        if (mobile != null) {
            setMobile(mobile);
        }

        Short typeOfDelivery = (Short) attributes.get("typeOfDelivery");

        if (typeOfDelivery != null) {
            setTypeOfDelivery(typeOfDelivery);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        String explain = (String) attributes.get("explain");

        if (explain != null) {
            setExplain(explain);
        }
    }

    @JSON
    @Override
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    @Override
    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }

        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (!_setOriginalCompanyId) {
            _setOriginalCompanyId = true;

            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public long getOriginalCompanyId() {
        return _originalCompanyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public long getCustomerId() {
        return _customerId;
    }

    @Override
    public void setCustomerId(long customerId) {
        _columnBitmask |= CUSTOMERID_COLUMN_BITMASK;

        if (!_setOriginalCustomerId) {
            _setOriginalCustomerId = true;

            _originalCustomerId = _customerId;
        }

        _customerId = customerId;
    }

    public long getOriginalCustomerId() {
        return _originalCustomerId;
    }

    @JSON
    @Override
    public String getAddress() {
        if (_address == null) {
            return StringPool.BLANK;
        } else {
            return _address;
        }
    }

    @Override
    public void setAddress(String address) {
        _address = address;
    }

    @JSON
    @Override
    public String getTelephone() {
        if (_telephone == null) {
            return StringPool.BLANK;
        } else {
            return _telephone;
        }
    }

    @Override
    public void setTelephone(String telephone) {
        _telephone = telephone;
    }

    @JSON
    @Override
    public String getMobile() {
        if (_mobile == null) {
            return StringPool.BLANK;
        } else {
            return _mobile;
        }
    }

    @Override
    public void setMobile(String mobile) {
        _mobile = mobile;
    }

    @JSON
    @Override
    public Short getTypeOfDelivery() {
        return _typeOfDelivery;
    }

    @Override
    public void setTypeOfDelivery(Short typeOfDelivery) {
        _typeOfDelivery = typeOfDelivery;
    }

    @JSON
    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _status = status;
    }

    @JSON
    @Override
    public String getExplain() {
        if (_explain == null) {
            return StringPool.BLANK;
        } else {
            return _explain;
        }
    }

    @Override
    public void setExplain(String explain) {
        _explain = explain;
    }

    @Override
    public StagedModelType getStagedModelType() {
        return new StagedModelType(PortalUtil.getClassNameId(
                Invoice.class.getName()));
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Invoice.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Invoice toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Invoice) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        InvoiceImpl invoiceImpl = new InvoiceImpl();

        invoiceImpl.setUuid(getUuid());
        invoiceImpl.setId(getId());
        invoiceImpl.setGroupId(getGroupId());
        invoiceImpl.setCompanyId(getCompanyId());
        invoiceImpl.setUserId(getUserId());
        invoiceImpl.setUserName(getUserName());
        invoiceImpl.setCreateDate(getCreateDate());
        invoiceImpl.setModifiedDate(getModifiedDate());
        invoiceImpl.setCustomerId(getCustomerId());
        invoiceImpl.setAddress(getAddress());
        invoiceImpl.setTelephone(getTelephone());
        invoiceImpl.setMobile(getMobile());
        invoiceImpl.setTypeOfDelivery(getTypeOfDelivery());
        invoiceImpl.setStatus(getStatus());
        invoiceImpl.setExplain(getExplain());

        invoiceImpl.resetOriginalValues();

        return invoiceImpl;
    }

    @Override
    public int compareTo(Invoice invoice) {
        long primaryKey = invoice.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Invoice)) {
            return false;
        }

        Invoice invoice = (Invoice) obj;

        long primaryKey = invoice.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        InvoiceModelImpl invoiceModelImpl = this;

        invoiceModelImpl._originalUuid = invoiceModelImpl._uuid;

        invoiceModelImpl._originalGroupId = invoiceModelImpl._groupId;

        invoiceModelImpl._setOriginalGroupId = false;

        invoiceModelImpl._originalCompanyId = invoiceModelImpl._companyId;

        invoiceModelImpl._setOriginalCompanyId = false;

        invoiceModelImpl._originalUserId = invoiceModelImpl._userId;

        invoiceModelImpl._setOriginalUserId = false;

        invoiceModelImpl._originalCustomerId = invoiceModelImpl._customerId;

        invoiceModelImpl._setOriginalCustomerId = false;

        invoiceModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Invoice> toCacheModel() {
        InvoiceCacheModel invoiceCacheModel = new InvoiceCacheModel();

        invoiceCacheModel.uuid = getUuid();

        String uuid = invoiceCacheModel.uuid;

        if ((uuid != null) && (uuid.length() == 0)) {
            invoiceCacheModel.uuid = null;
        }

        invoiceCacheModel.id = getId();

        invoiceCacheModel.groupId = getGroupId();

        invoiceCacheModel.companyId = getCompanyId();

        invoiceCacheModel.userId = getUserId();

        invoiceCacheModel.userName = getUserName();

        String userName = invoiceCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            invoiceCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            invoiceCacheModel.createDate = createDate.getTime();
        } else {
            invoiceCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            invoiceCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            invoiceCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        invoiceCacheModel.customerId = getCustomerId();

        invoiceCacheModel.address = getAddress();

        String address = invoiceCacheModel.address;

        if ((address != null) && (address.length() == 0)) {
            invoiceCacheModel.address = null;
        }

        invoiceCacheModel.telephone = getTelephone();

        String telephone = invoiceCacheModel.telephone;

        if ((telephone != null) && (telephone.length() == 0)) {
            invoiceCacheModel.telephone = null;
        }

        invoiceCacheModel.mobile = getMobile();

        String mobile = invoiceCacheModel.mobile;

        if ((mobile != null) && (mobile.length() == 0)) {
            invoiceCacheModel.mobile = null;
        }

        invoiceCacheModel.typeOfDelivery = getTypeOfDelivery();

        invoiceCacheModel.status = getStatus();

        invoiceCacheModel.explain = getExplain();

        String explain = invoiceCacheModel.explain;

        if ((explain != null) && (explain.length() == 0)) {
            invoiceCacheModel.explain = null;
        }

        return invoiceCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(31);

        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", id=");
        sb.append(getId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", customerId=");
        sb.append(getCustomerId());
        sb.append(", address=");
        sb.append(getAddress());
        sb.append(", telephone=");
        sb.append(getTelephone());
        sb.append(", mobile=");
        sb.append(getMobile());
        sb.append(", typeOfDelivery=");
        sb.append(getTypeOfDelivery());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", explain=");
        sb.append(getExplain());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(49);

        sb.append("<model><model-name>");
        sb.append("com.arman.csb.modules.model.Invoice");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerId</column-name><column-value><![CDATA[");
        sb.append(getCustomerId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address</column-name><column-value><![CDATA[");
        sb.append(getAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>telephone</column-name><column-value><![CDATA[");
        sb.append(getTelephone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>mobile</column-name><column-value><![CDATA[");
        sb.append(getMobile());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>typeOfDelivery</column-name><column-value><![CDATA[");
        sb.append(getTypeOfDelivery());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>explain</column-name><column-value><![CDATA[");
        sb.append(getExplain());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
